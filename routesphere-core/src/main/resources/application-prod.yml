# Quarkus Production Configuration for RouteSphere

quarkus:
  http:
    port: 8080
    host: 0.0.0.0
    ssl:
      port: 8443
  
  log:
    level: WARN
    category:
      "com.telcobright.routesphere":
        level: INFO

# RouteSphere Tenant Configuration - Production
routesphere:
  tenant:
    id: "telcobright_root"
    name: "TelcoBright Root Organization"
    type: "ROOT"
    active-profile: "prod"
    active: true
    
    profiles:
      # Production Profile
      prod:
        name: "production"
        active: true
        
        # General Configuration
        general:
          database:
            type: "mysql"
            host: "${DB_HOST:db.production.local}"
            port: ${DB_PORT:3306}
            name: "${DB_NAME:routesphere_prod}"
            username: "${DB_USER:routesphere}"
            password: "${DB_PASSWORD}"
            url: "jdbc:mysql://${DB_HOST:db.production.local}:${DB_PORT:3306}/${DB_NAME:routesphere_prod}"
            pool:
              min-size: 20
              max-size: 100
              initial-size: 30
              max-lifetime: "30m"
              idle-timeout: "5m"
            properties:
              serverTimezone: "UTC"
              useSSL: "true"
              requireSSL: "true"
              verifyServerCertificate: "true"
          
          kafka:
            bootstrap-servers: "${KAFKA_SERVERS:kafka1.prod:9092,kafka2.prod:9092,kafka3.prod:9092}"
            group-id: "routesphere-prod-${INSTANCE_ID:1}"
            topics:
              cdr: "cdr-prod"
              events: "events-prod"
              billing: "billing-prod"
              routing: "routing-prod"
            producer:
              acks: "all"
              retries: 5
              batch-size: 32768
              linger-ms: 20
              compression-type: "lz4"
            consumer:
              auto-offset-reset: "latest"
              enable-auto-commit: false
              max-poll-records: 1000
              session-timeout-ms: 60000
            security:
              protocol: "SASL_SSL"
              sasl-mechanism: "PLAIN"
              sasl-jaas-config: "${KAFKA_SASL_CONFIG}"
          
          redis:
            host: "${REDIS_HOST:redis.production.local}"
            port: ${REDIS_PORT:6379}
            password: "${REDIS_PASSWORD}"
            database: 0
            timeout: "2s"
            pool:
              max-total: 200
              max-idle: 50
              min-idle: 20
            cluster:
              nodes: "${REDIS_CLUSTER_NODES:redis1.prod:6379,redis2.prod:6379,redis3.prod:6379}"
              max-redirects: 3
          
          config-manager:
            base-url: "${CONFIG_MANAGER_URL:https://config.production.local}"
            tenant-endpoint: "/api/v1/tenant-root"
            timeout: "10s"
            auth:
              type: "bearer"
              token: "${CONFIG_MANAGER_TOKEN}"
            retry:
              max-attempts: 5
              delay: "2s"
              max-delay: "30s"
          
          monitoring:
            metrics:
              enabled: true
              export-interval: "10s"
              prometheus-endpoint: "/metrics"
            health:
              enabled: true
              liveness-path: "/health/live"
              readiness-path: "/health/ready"
            logging:
              level: "INFO"
              format: "json"
              file-path: "/var/log/routesphere/prod.log"
        
        # Production Socket Configurations
        sockets:
          # SIP External Profile - Production
          sip-external:
            name: "sip-external-prod"
            protocol: "SIP"
            enabled: true
            network:
              bind-address: "${SIP_EXTERNAL_IP:0.0.0.0}"
              bind-port: ${SIP_EXTERNAL_PORT:5060}
              external-ip: "${PUBLIC_IP}"
              external-port: ${PUBLIC_SIP_PORT:5060}
              transport: "UDP,TCP,TLS"
              limits:
                max-connections: 50000
                max-connections-per-ip: 500
                connection-timeout: "120s"
                rate-limit: 1000
            security:
              tls:
                enabled: true
                cert-file: "/etc/routesphere/certs/sip.crt"
                key-file: "/etc/routesphere/certs/sip.key"
                ca-file: "/etc/routesphere/certs/ca.crt"
                verify-client: true
                protocols: "TLSv1.2,TLSv1.3"
              auth:
                type: "digest"
                realm: "${SIP_REALM:routesphere.com}"
                require-auth: true
                auth-methods: "INVITE,REGISTER,SUBSCRIBE"
                nonce-ttl: "600s"
              access:
                allow-networks: "${ALLOWED_NETWORKS:0.0.0.0/0}"
                deny-ips: "${BLOCKED_IPS:}"
                require-registration: true
            settings:
              user-agent: "RouteSphere/2.0-PROD"
              max-forwards: "70"
              session-expires: "3600"
              min-session-expires: "180"
          
          # HTTPS REST API Profile - Production
          https-rest:
            name: "https-rest-prod"
            protocol: "HTTPS"
            enabled: true
            network:
              bind-address: "0.0.0.0"
              bind-port: 8443
              transport: "TCP"
              limits:
                max-connections: 10000
                connection-timeout: "30s"
                idle-timeout: "300s"
                rate-limit: 5000
            security:
              tls:
                enabled: true
                cert-file: "/etc/routesphere/certs/api.crt"
                key-file: "/etc/routesphere/certs/api.key"
                protocols: "TLSv1.2,TLSv1.3"
                ciphers: "HIGH:!aNULL:!MD5"
              auth:
                type: "bearer"
                require-auth: true
            settings:
              cors-enabled: "true"
              cors-origins: "${ALLOWED_ORIGINS:https://app.routesphere.com}"
              max-request-size: "50MB"
              compression-enabled: "true"
              
      # Staging Profile
      staging:
        name: "staging"
        active: false
        general:
          database:
            type: "mysql"
            host: "staging-db.local"
            port: 3306
            name: "routesphere_staging"
            username: "routesphere_staging"
            password: "${STAGING_DB_PASSWORD}"
            url: "jdbc:mysql://staging-db.local:3306/routesphere_staging"
          kafka:
            bootstrap-servers: "kafka-staging.local:9092"
            group-id: "routesphere-staging"
          config-manager:
            base-url: "https://config-staging.local"
        sockets:
          sip-staging:
            name: "sip-staging"
            protocol: "SIP"
            enabled: true
            network:
              bind-address: "0.0.0.0"
              bind-port: 5060