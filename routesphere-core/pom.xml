<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <parent>
        <groupId>com.telcobright</groupId>
        <artifactId>routesphere-parent</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    
    <artifactId>routesphere-core</artifactId>
    <packaging>jar</packaging>
    <name>RouteSphere Core</name>
    <description>Core utilities and shared components for RouteSphere</description>
    
    <properties>
        <quarkus.platform.version>3.6.0</quarkus.platform.version>
    </properties>
    
    <dependencies>
        <!-- Quarkus dependencies -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-arc</artifactId>
            <version>${quarkus.platform.version}</version>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-scheduler</artifactId>
            <version>${quarkus.platform.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <version>4.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
        <!-- Jackson for JSON parsing -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.15.2</version>
        </dependency>
        <!-- Jackson JSR310 for Java 8 Date/Time support -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>2.15.2</version>
        </dependency>
        <!-- Jackson YAML support -->
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>2.15.2</version>
        </dependency>
        <!-- Apache HttpClient for REST calls -->
        <dependency>
            <groupId>org.apache.httpcomponents.client5</groupId>
            <artifactId>httpclient5</artifactId>
            <version>5.2.1</version>
        </dependency>
        <!-- Quarkus REST Client -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-rest-client-reactive-jackson</artifactId>
            <version>${quarkus.platform.version}</version>
        </dependency>
        <!-- YAML parsing -->
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>2.0</version>
        </dependency>
        <!-- Quarkus Config YAML -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-config-yaml</artifactId>
            <version>${quarkus.platform.version}</version>
        </dependency>
        <!-- Quarkus Kafka Streams - COMMENTED OUT FOR NOW -->
        <!-- Uncomment when Kafka is configured -->
        <!--
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-kafka-client</artifactId>
            <version>${quarkus.platform.version}</version>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-smallrye-reactive-messaging-kafka</artifactId>
            <version>${quarkus.platform.version}</version>
        </dependency>
        -->
        <!-- Quarkus REST/RESTEasy Reactive -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy-reactive</artifactId>
            <version>${quarkus.platform.version}</version>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy-reactive-jackson</artifactId>
            <version>${quarkus.platform.version}</version>
        </dependency>

        <!-- JPA/Hibernate for entity classes - COMMENTED OUT FOR NOW -->
        <!-- Uncomment these when you need database access -->
        <!--
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-hibernate-orm</artifactId>
            <version>${quarkus.platform.version}</version>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-hibernate-orm-panache</artifactId>
            <version>${quarkus.platform.version}</version>
        </dependency>
        -->

        <!-- Jakarta Persistence API -->
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <version>3.1.0</version>
        </dependency>

        <!-- Lombok for entity classes -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.30</version>
            <scope>provided</scope>
        </dependency>

        <!-- Database drivers -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-jdbc-mysql</artifactId>
            <version>${quarkus.platform.version}</version>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-jdbc-postgresql</artifactId>
            <version>${quarkus.platform.version}</version>
        </dependency>

        <!-- Util module for entity conversion -->
        <dependency>
            <groupId>com.telcobright</groupId>
            <artifactId>util</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>
    
    <build>
        <plugins>
            <plugin>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus.platform.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                            <goal>generate-code</goal>
                            <goal>generate-code-tests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <maven.home>${maven.home}</maven.home>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- Profile to sync domain models from ConfigManager -->
        <profile>
            <id>sync-entities</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>sync-domain-models-from-configmanager</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <mainClass>com.telcobright.util.db.SpringToQuarkusEntityConverter</mainClass>
                                    <classpathScope>compile</classpathScope>
                                    <arguments>
                                        <!-- Source: ConfigManager domain models -->
                                        <argument>${basedir}/../RTC-Manager/ConfigManager/src/main/java/com/telcobright/rtc/domainmodel</argument>
                                        <!-- Destination: routesphere-core domain models -->
                                        <argument>${basedir}/src/main/java/com/telcobright/rtc/domainmodel</argument>
                                        <!-- Annotations to preserve -->
                                        <argument>Entity,Table,Id,GeneratedValue,Column,ManyToOne,OneToMany,ManyToMany,OneToOne,JoinColumn,JoinTable,Transient,Temporal,Enumerated,Lob,Basic,FetchType,CascadeType,Index,UniqueConstraint,NamedQuery,NamedQueries,SqlResultSetMapping,ColumnResult,EntityResult,FieldResult,NamedNativeQuery,NamedNativeQueries,SequenceGenerator,TableGenerator,Embeddable,Embedded,EmbeddedId,IdClass,MappedSuperclass,Inheritance,DiscriminatorColumn,DiscriminatorValue,PrimaryKeyJoinColumn,SecondaryTable,SecondaryTables,Version,PrePersist,PostPersist,PreUpdate,PostUpdate,PreRemove,PostRemove,PostLoad,Data,Getter,Setter,ToString,EqualsAndHashCode,NoArgsConstructor,AllArgsConstructor,Builder,JsonIgnore,JsonProperty,JsonFormat,JsonInclude</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>com.telcobright</groupId>
                                <artifactId>util</artifactId>
                                <version>1.0-SNAPSHOT</version>
                            </dependency>
                        </dependencies>
                    </plugin>

                    <!-- Optional: Clean up after sync -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>cleanup-after-sync</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo message="================================================="/>
                                        <echo message="Post-sync cleanup tasks"/>
                                        <echo message="================================================="/>

                                        <!-- Remove any remaining Spring/ConfigManager specific imports (but keep nonentity folder) -->
                                        <replaceregexp byline="true" flags="g">
                                            <regexp pattern="^import freeswitch\..*$"/>
                                            <substitution expression=""/>
                                            <fileset dir="${basedir}/src/main/java/com/telcobright/rtc/domainmodel">
                                                <include name="**/*.java"/>
                                            </fileset>
                                        </replaceregexp>

                                        <replaceregexp byline="true" flags="g">
                                            <regexp pattern="^import sharedtypes\..*$"/>
                                            <substitution expression=""/>
                                            <fileset dir="${basedir}/src/main/java/com/telcobright/rtc/domainmodel">
                                                <include name="**/*.java"/>
                                            </fileset>
                                        </replaceregexp>

                                        <echo message="Cleanup completed!"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>